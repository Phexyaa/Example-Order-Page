@page "/"
@rendermode InteractiveServer
@inject IItemService _itemService;

<div class="">
    <div class="banner">
        <h1 class="title">Ice Cream of the Month</h1>
        <p class="description">Make your selections below for you monthly dessert shipment</p>
    </div>
    <form class="order-form">
        <fieldset class="details-area">
            <label id="name-label"
                   for="name">
                Name:
                <input id="name"
                       name="name"
                       type="text"
                       required />
            </label>
            <label id="email-label"
                   for="email">
                Email:
                <input id="email"
                       name="email"
                       type="email"
                       required />
            </label>
            <label id="number-label" for="number">
                Telephone Number:
                <input onwheel="this.blur()"
                       id="number"
                       name="number"
                       type="number"
                       required min="9"
                       max="9" />
            </label>
        </fieldset>
        <fieldset class="flavor-selection-area">
            <label class="container-label"
                   for="container-dropdown">
                Container Type:
                <select class="container-dropdown"
                        name="container-dropdown"
                        @bind="selectedMenu">
                    <option value="bowl">
                        Bowl
                    </option>
                    <option value="cone">
                        Cone
                    </option>
                </select>
            </label>
            <div class="menu">
                @switch (selectedMenu)
                {
                    case "bowl":
                        order.Container = ContainerType.Bowl;
                        foreach (var bowl in MenuItemImageHelper.BowlImages)
                        {
                            var bowlId = $"{MenuItemImageHelper.BowlImageNames[bowl.Key]}-radio";
                            order.Price = _itemService.GetItemPrice(ContainerType.Bowl, bowl.Key);

                            <label class="menu-item"
                                   for="@bowlId">
                                <img id="@bowlId"
                                     name="@bowlId"
                                     class="item-image"
                                     alt="@bowlId"
                                     src="@MenuItemImageHelper.BowlImages[bowl.Key]" />
                                <div class="item-price-div">
                                    @order.Price.ToString("C")
                                    <button id="add-cart-button"
                                            class="add-cart-button">
                                        <img src="Images/cart-plus.svg" alt="add to cart" />
                                    </button>
                                </div>
                            </label>
                        }
                        break;
                    case "cone":
                        order.Container = ContainerType.Cone;
                        foreach (var cone in MenuItemImageHelper.ConeImages)
                        {
                            var coneId = $"{MenuItemImageHelper.ConeImageNames[cone.Key]}-radio";
                            order.Price = _itemService.GetItemPrice(ContainerType.Bowl, cone.Key);

                            <label class="menu-item"
                                   for="@coneId">
                                <img id="@coneId"
                                     name="@coneId"
                                     alt="@coneId"
                                     class="item-image"
                                     src="@MenuItemImageHelper.ConeImages[cone.Key]" />
                                <div class="item-price-div">
                                    @order.Price.ToString("C")
                                    <button id="add-cart-button"
                                            class="add-cart-button">
                                        <img src="Images/cart-plus.svg" alt="add to cart" />
                                    </button>
                                </div>
                            </label>
                        }
                        break;
                    default:
                        throw new ArgumentOutOfRangeException(nameof(selectedMenu));
                }
            </div>
        </fieldset>        
        <fieldset class="comments-area">
            <div class="comments-group">
                <label id="comments-label" for="comments">
                    Questions/Comments:
                </label>
                <textarea class="comments" name="comments"></textarea>
            </div>
        </fieldset>
        <fieldset>
            <button class="submit" type="submit">Place Order</button>
        </fieldset>
    </form>
</div>

@code {
    private string selectedMenu = "cone";
    private IceCreamOrder order = new();

    private void HandleMenuSelect(ContainerType container, IceCreamFlavor flavor)
    {

    }
}